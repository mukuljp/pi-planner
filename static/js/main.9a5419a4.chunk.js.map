{"version":3,"sources":["data/initial-data.js","story.js","column.js","add-edit-dialog.js","user-list.js","show-user-icon.js","serviceWorker.js","index.js"],"names":["initialData","stories","columns","id","title","show","storyIds","columnOrder","selectedEpics","Container","styled","div","props","isDragging","Dependancy","bgColor","DependancyContainer","TaskContainer","DragContainer","Epic","HeaderContainer","Story","this","story","draggableId","index","provided","snapshot","draggableProps","ref","innerRef","dragHandleProps","epic","style","width","IconButton","onClick","onEditStory","aria-label","onDeleteStory","description","dependancies","map","dep","key","risks","risk","React","Component","Title","h3","StoriesList","isDragginOver","InnerList","storyIndex","PureComponent","Column","column","droppableId","type","droppableProps","isDraggingOver","placeholder","DependancyContainerWrap","DependancyActionContainer","DependancyAction","ButtonWrap","useStyles","makeStyles","theme","root","margin","spacing","FormDialog","storyId","isAddmode","handleTitleChange","handleDescChange","handleEpicChange","addMoreRisks","handleRiskChange","handleDependancyChange","removeRisk","addMoreDeps","removeDependancy","classes","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","className","autoComplete","TextField","label","value","onChange","variant","required","multiline","rows","e","Button","color","DialogActions","handleFormSubmit","cloneDeep","display","2","palette","getContrastText","deepOrange","backgroundColor","1","deepPurple","LetterAvatars","Avatar","UserListIcon","useState","state","setState","toggleDrawer","event","Fragment","_ngcontent-fih-c19","Drawer","anchor","role","onKeyDown","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","CheckboxList","pos","topMargin","CheckboxItem","FloatingAddContainer","AppUserSection","storiesMap","App","piData","localStorage","getItem","JSON","parse","dialogOptions","Date","onDragEnd","result","destination","source","newColummnOrder","Array","from","splice","newState","setItem","stringify","start","finish","newStoryIds","newColumn","startStoryIds","newStart","finishStoryIds","newFinish","onCheck","target","checked","openAddDialog","uniq","Object","keys","forEach","item","newStoriesArray","filter","onCheckEpicFilter","selectedEpicsList","push","find","epicItm","res","p","epicList","strItem","Fab","_ngcontent-rcu-c19","AppBar","Toolbar","Typography","columnId","colomnIndex","hasOwnProperty","Checkbox","selectedEpicFound","epitem","direction","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9a5419a4.chunk.js","sourcesContent":["export const initialData = {\r\n    stories:{\r\n        \r\n    },\r\n    columns:{\r\n        'column-1':{\r\n            id:'column-1',\r\n            title:'To Do',\r\n            show:true,\r\n            storyIds:[],\r\n        },\r\n        'column-2':{\r\n            id:'column-2',\r\n            title:'Sprint 1',\r\n            storyIds:[]\r\n        },\r\n        'column-3':{\r\n            id:'column-3',\r\n            title:'Sprint 2',\r\n            storyIds:[]\r\n        },\r\n        'column-4':{\r\n            id:'column-4',\r\n            title:'Sprint 3',\r\n            storyIds:[]\r\n        },\r\n        'column-5':{\r\n            id:'column-5',\r\n            title:'Sprint 4',\r\n            storyIds:[]\r\n        },\r\n        'column-6':{\r\n            id:'column-6',\r\n            title:'Sprint 5',\r\n            storyIds:[]\r\n        },\r\n        'column-7':{\r\n            id:'column-7',\r\n            title:'Sprint 6',\r\n            storyIds:[]\r\n        }\r\n    },\r\n    columnOrder:['column-1','column-2','column-3','column-4','column-5','column-6','column-7'],\r\n    selectedEpics:[]\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nconst Container = styled.div`\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  margin-bottom: 12px;\r\n  background-color: ${props => (props.isDragging ? \"#1b8167\" : \"ALICEBLUE\")};\r\n  display: flex;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: box-shadow 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  &:hover {\r\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\r\n  }\r\n`;\r\n\r\n\r\nconst Dependancy = styled.div`\r\n  width: 120px;\r\n\r\n  padding: 8px;\r\n  margin: 8px;\r\n  background-color: ${props => props.bgColor};\r\n`;\r\nconst DependancyContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst TaskContainer = styled.div`\r\n  flex-grow: 1;\r\n`;\r\nconst DragContainer = styled.div`\r\n  background: #a9d2fb;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Epic = styled.div`\r\n  font-weight: 900;\r\n  word-break: break-all;\r\n  text-align: center;\r\n  min-height: 30px;\r\n`;\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default class Story extends React.Component {\r\n  render() {\r\n    if(!this.props.story.show)return'';\r\n    return (\r\n      <Draggable draggableId={this.props.story.id} index={this.props.index}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n          >\r\n            {/* <DragContainer {...provided.dragHandleProps}>\r\n              <DragHandle\r\n                \r\n                src={dragIcon}\r\n              ></DragHandle>\r\n              <EpicTitle>EPIC</EpicTitle>\r\n              <Epic>{this.props.story.epic}</Epic>\r\n            </DragContainer> */}\r\n\r\n            <TaskContainer>\r\n              <DragContainer {...provided.dragHandleProps}>\r\n                <Epic>\r\n                  <h2>{this.props.story.epic}</h2>\r\n                </Epic>\r\n              </DragContainer>\r\n              <HeaderContainer>\r\n                <h3 style={{ width: \"85%\" ,'wordBreak': 'break-all'}}>{this.props.story.title}</h3>\r\n                \r\n                <IconButton  onClick={() => {\r\n                    this.props.onEditStory(this.props.story.id);\r\n                  }} aria-label=\"edit\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton onClick={() => {\r\n                    this.props.onDeleteStory(this.props.story.id);\r\n                  }} aria-label=\"delete\">\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </HeaderContainer>\r\n\r\n              <div>{this.props.story.description}</div>\r\n              <DependancyContainer>\r\n                {this.props.story.dependancies.map((dep, index) => (\r\n                  <Dependancy bgColor=\"#7df57d\" key={index}>\r\n                    {dep}\r\n                  </Dependancy>\r\n                ))}\r\n              </DependancyContainer>\r\n              <DependancyContainer>\r\n                {this.props.story.risks.map((risk, index) => (\r\n                  <Dependancy bgColor=\"#fd9595\" key={index}>\r\n                    {risk}\r\n                  </Dependancy>\r\n                ))}\r\n              </DependancyContainer>\r\n            </TaskContainer>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Story from \"./story\";\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n \r\n  border-radius: 2px;\r\n  width: 420px;\r\n \r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n  transition: box-shadow 0.3s cubic-bezier(.25,.8,.25,1);\r\n  &:hover {\r\n    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)\r\n  }\r\n  \r\n`;\r\nconst Title = styled.h3`\r\n  padding: 8px;\r\n  text-align: center;\r\n    background: cadetblue;\r\n`;\r\nconst StoriesList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => (props.isDragginOver ? \"skyblue\" : \"inherit\")};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n  overflow-y:scroll;\r\n  height:70vh;\r\n`;\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    return this.props.stories.map((story, storyIndex) => (\r\n      <Story key={story.id} story={story} index={storyIndex} onDeleteStory={this.props.onDeleteStory} onEditStory={this.props.onEditStory}></Story>\r\n    ));\r\n  }\r\n}\r\nexport default class Column extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <Title {...provided.dragHandleProps}>\r\n              {this.props.column.title}\r\n            </Title>\r\n            <Droppable droppableId={this.props.column.id} type=\"story\">\r\n              {(provided, snapshot) => (\r\n                <StoriesList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDragginOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList stories={this.props.stories} onDeleteStory={this.props.onDeleteStory} onEditStory={this.props.onEditStory}></InnerList>\r\n                  {provided.placeholder}\r\n                </StoriesList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport {cloneDeep} from 'lodash';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst DependancyContainer = styled.div`\r\n \r\n \r\n`;\r\nconst DependancyContainerWrap = styled.div`\r\n  display: flex;\r\n`;\r\nconst DependancyActionContainer = styled.div``;\r\nconst DependancyAction = styled.div`\r\n  display: flex;\r\n  margin-left: 8px;\r\n  \r\n`;\r\nconst ButtonWrap = styled.div`\r\n\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function FormDialog(props) {\r\n  const {storyId,isAddmode,story,handleTitleChange,handleDescChange,handleEpicChange,addMoreRisks,handleRiskChange,handleDependancyChange,removeRisk,addMoreDeps,removeDependancy}=props;\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    if(story.epic){\r\n      props.handleFormSubmit(storyId,isAddmode,cloneDeep(story));\r\n    }\r\n    \r\n  };\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose} \r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.isAddmode?\"Add a new Story\":\"Edit Story\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.isAddmode?\"A new story with the provided data will be created and added to TODO section\":\"An existing Story is being edited\"}\r\n          </DialogContentText>\r\n          <form className={classes.root}  autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"story-text\"\r\n                label=\"Story Titile\"\r\n                value={story.title}\r\n                onChange={handleTitleChange}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"Epic\"\r\n                label=\"EpiC details\"\r\n                value={story.epic}\r\n                required\r\n                onChange={handleEpicChange}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Story Description\"\r\n                multiline\r\n                rows=\"4\"\r\n                value={story.description}\r\n                onChange={handleDescChange}\r\n                variant=\"outlined\"\r\n              />\r\n              <DependancyContainerWrap>\r\n                <DependancyContainer>\r\n                  {story.dependancies.map((dep, index) => (\r\n                    <DependancyAction  key={index}>\r\n                      <TextField\r\n                       \r\n                        id={dep + \"index\"}\r\n                        label={\"Dependancy \" + index}\r\n                        multiline\r\n                        rows=\"2\"\r\n                        value={dep}\r\n                         onChange={(e)=>{handleDependancyChange(e,index)}}\r\n                        variant=\"outlined\"\r\n                      />\r\n                       <ButtonWrap> <IconButton onClick={()=>{removeDependancy(index)}} aria-label=\"delete\">\r\n                  <DeleteIcon />\r\n                </IconButton></ButtonWrap>\r\n                     \r\n                    </DependancyAction>\r\n                  ))}\r\n                  <DependancyActionContainer>\r\n                    <DependancyAction>\r\n                      <Button onClick={addMoreDeps} variant=\"contained\" color=\"primary\">\r\n                        Add Deps\r\n                      </Button>\r\n                    </DependancyAction>\r\n                  </DependancyActionContainer>\r\n                </DependancyContainer>\r\n                <DependancyContainer>\r\n                  {story.risks.map((risk, index) => (\r\n                    <DependancyAction key={index}>\r\n                      <TextField\r\n                        \r\n                        id={risk + \"index\"}\r\n                        label={\"Risk \" + index}\r\n                        value={risk}\r\n                        multiline\r\n                        rows=\"2\"\r\n                        onChange={(e)=>{handleRiskChange(e,index)}}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <ButtonWrap>\r\n                      \r\n                        <IconButton onClick={()=>{removeRisk(index)}}  aria-label=\"delete\">\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n                      </ButtonWrap>\r\n                    </DependancyAction>\r\n                  ))}\r\n                  <DependancyActionContainer>\r\n                    <DependancyAction>\r\n                      <Button onClick={addMoreRisks} variant=\"contained\" color=\"primary\">\r\n                        Add Risks\r\n                      </Button>\r\n                    </DependancyAction>\r\n                  </DependancyActionContainer>\r\n                </DependancyContainer>\r\n              </DependancyContainerWrap>\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'block',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  2: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  1: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nexport default function LetterAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar>H</Avatar>\r\n      <Avatar  className={classes[2]} >N</Avatar>\r\n      <Avatar className={classes[1]}>OP</Avatar>  \r\n      <Avatar className={classes[1]}>OP</Avatar>  \r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport LetterAvatars from './user-list';\r\n\r\n\r\nexport default function UserListIcon() {\r\n  const [state, setState] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState(open);\r\n  };\r\n\r\n  const list = () => (\r\n    <div\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <LetterAvatars></LetterAvatars>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <Button onClick={toggleDrawer(true)}><span _ngcontent-fih-c19=\"\" className=\"material-icons icon-image-preview\">supervisor_account</span></Button>\r\n        <Drawer anchor={\"right\"} open={state} onClose={toggleDrawer(false)}>\r\n          {list(\"right\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@atlaskit/css-reset\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport styled from \"styled-components\";\nimport { initialData } from \"./data/initial-data\";\nimport Column from \"./column\";\nimport FormDialog from \"./add-edit-dialog\";\n\nimport UserListIcon from \"./show-user-icon\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport {cloneDeep,uniq} from 'lodash';\nimport * as serviceWorker from './serviceWorker';\nconst Container = styled.div`\n  display: flex;\n  \n`;\n\nconst CheckboxList = styled.div`\n  display: flex;\n  margin: 5px;\n \n  width: 97vw;\n  padding-left: 5px;\n  position: ${props => (props.pos ? props.pos : \"fixed\")};;\n  top:${props => (props.topMargin ? props.topMargin+'px' : \"inherit\")};\n  flex-wrap:wrap;\n`;\nconst CheckboxItem = styled.div`\n  border-radius: 2px;\n  margin-right: 8px;\n`;\nconst FloatingAddContainer = styled.div`\n  position: fixed;\n  top: 88vh;\n  left: 88vw;\n`;\nconst AppUserSection = styled.div`\n  display: flex;\n`;\nclass InnerList extends React.PureComponent {\n  render() {\n    const { column, storiesMap, index, onEditStory ,onDeleteStory} = this.props;\n    const stories = column.storyIds.map(storyId => storiesMap[storyId]);\n    return (\n      <Column\n        key={column.id}\n        column={column}\n        stories={stories}\n        index={index}\n        onEditStory={onEditStory}\n        onDeleteStory={onDeleteStory}\n      ></Column>\n    );\n  }\n}\nclass App extends React.Component {\n  state = {\n    piData: localStorage.getItem('initialData')?JSON.parse(localStorage.getItem('initialData')):initialData,\n    dialogOptions: {\n      open: false,\n      isAddmode: true,\n      storyId: \"\",\n      story: {\n        id: \"story_\" + +new Date(),\n        title: \"\",\n        description: \"\",\n        epic: \"\",\n        risks: [],\n        dependancies: []\n      }\n    }\n  };\n\n  render() {\n\n    let epicList = [];\n    let strIds = Object.keys(this.state.piData.stories);\n    \n    strIds.forEach(strItem=>{\n     \n      epicList.push(this.state.piData.stories[strItem].epic)\n    });\n    epicList = uniq(epicList);\n  \n\n    return (\n      <React.Fragment>\n        <FloatingAddContainer onClick={this.openAddDialog}>\n          <Fab color=\"primary\" aria-label=\"add\">\n            <span\n              _ngcontent-rcu-c19=\"\"\n              className=\"material-icons icon-image-preview\"\n            >\n              add_circle\n            </span>\n          </Fab>\n        </FloatingAddContainer>\n        <AppBar>\n          <Toolbar className=\"space-between\">\n            <Typography variant=\"h6\">Vizards</Typography>\n            <CheckboxList pos={'relative'}>\n          {this.state.piData.columnOrder.map((columnId, colomnIndex) => {\n            const column = this.state.piData.columns[columnId];\n            if (!column.hasOwnProperty(\"show\")) {\n              column.show = false;\n            }\n            return (\n              <CheckboxItem  key={\"switch\" + colomnIndex}>\n                <label>\n                  {column.title}\n                  <Checkbox\n                 color=\"default\"\n                    onChange={checked => {\n                      this.onCheck(checked, column.id);\n                    }}\n                    checked={column.show}\n                  />\n                </label>{\" \"}\n              </CheckboxItem>\n            );\n          })}\n        </CheckboxList>\n            <AppUserSection>\n              <UserListIcon></UserListIcon>\n              <Avatar>H</Avatar>\n            </AppUserSection>\n          </Toolbar>\n        </AppBar>\n        <Toolbar id=\"back-to-top-anchor\" />\n        \n        <CheckboxList pos={'relative'}  >\n          {epicList.map((epic, colomnIndex) => {\n            const selectedEpicFound= this.state.piData.selectedEpics.find(epitem=>epitem===epic);\n            return (\n              <CheckboxItem key={\"switch\" + colomnIndex}>\n                <label>\n                  {epic}\n                  <Checkbox\n                    onChange={checked => {\n                      this.onCheckEpicFilter(checked, epic);\n                    }}\n                    checked={selectedEpicFound?true:false}\n                  />\n                </label>{\" \"}\n              </CheckboxItem>\n            );\n          })}\n        </CheckboxList>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable\n            droppableId=\"all-colomn-dropable\"\n            direction=\"horizontal\"\n            type=\"column\"\n          >\n            {provided => (\n              <Container {...provided.droppableProps} ref={provided.innerRef}>\n                {this.state.piData.columnOrder.map((columnId, colomnIndex) => {\n                  const column = this.state.piData.columns[columnId];\n                  if (!column.show) return \"\";\n                  return (\n                    <InnerList\n                      key={column.id}\n                      column={column}\n                      storiesMap={this.state.piData.stories}\n                      index={colomnIndex}\n                      onEditStory={this.onEditStory}\n                      onDeleteStory={this.onDeleteStory}\n                    ></InnerList>\n                  );\n                })}\n                {provided.placeholder}\n              </Container>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <FormDialog\n          story={this.state.dialogOptions.story}\n          open={this.state.dialogOptions.open}\n          isAddmode={this.state.dialogOptions.isAddmode}\n          handleFormSubmit={this.handleFormSubmit}\n          stories={this.state.piData.stories}\n          storyId={this.state.dialogOptions.storyId}\n          handleTitleChange={this.handleTitleChange}\n          handleDescChange={this.handleDescChange}\n          handleEpicChange={this.handleEpicChange}\n          addMoreRisks={this.addMoreRisks}\n          handleRiskChange={this.handleRiskChange}\n          handleDependancyChange = {this.handleDependancyChange}\n          removeRisk={this.removeRisk}\n          addMoreDeps={this.addMoreDeps}\n          removeDependancy={this.removeDependancy}\n          handleClose={this.handleClose}\n        ></FormDialog>\n      </React.Fragment>\n    );\n  }\n  handleClose=()=>{\n    this.setState({\n      ...this.state,\n      \n      dialogOptions: { ...this.state.dialogOptions, open: false }\n    });\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === \"column\") {\n      const newColummnOrder = Array.from(this.state.piData.columnOrder);\n      newColummnOrder.splice(source.index, 1);\n      newColummnOrder.splice(destination.index, 0, draggableId);\n      const newState = {\n        ...this.state,\n        piData: {\n          ...this.state.piData,\n          columnOrder: newColummnOrder\n        }\n      };\n      this.setState(newState);\n      localStorage.setItem('initialData',JSON.stringify(newState.piData));\n      return;\n    }\n    const start = this.state.piData.columns[source.droppableId];\n    const finish = this.state.piData.columns[destination.droppableId];\n    if (start === finish) {\n      const newStoryIds = Array.from(start.storyIds);\n      newStoryIds.splice(source.index, 1);\n      newStoryIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        storyIds: newStoryIds\n      };\n\n      const newState = {\n        ...this.state,\n        piData: {\n          ...this.state.piData,\n          columns: {\n            ...this.state.piData.columns,\n            [newColumn.id]: newColumn\n          }\n        }\n      };\n      this.setState(newState);\n      localStorage.setItem('initialData',JSON.stringify(newState.piData));\n      return;\n    }\n\n    const startStoryIds = Array.from(start.storyIds);\n    startStoryIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      storyIds: startStoryIds\n    };\n\n    const finishStoryIds = Array.from(finish.storyIds);\n    finishStoryIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      storyIds: finishStoryIds\n    };\n    const newState = {\n      ...this.state,\n      piData: {\n        ...this.state.piData,\n        columns: {\n          ...this.state.piData.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      }\n    };\n    this.setState(newState);\n    localStorage.setItem('initialData',JSON.stringify(newState.piData));\n  };\n  onCheck = (e, id) => {\n    const newState = {\n      ...this.state,\n      piData: {\n        ...this.state.piData,\n        columns: {\n          ...this.state.piData.columns,\n          [id]: {\n            ...this.state.piData.columns[id],\n            show: e.target.checked\n          }\n        }\n      }\n    };\n    this.setState(newState);\n    localStorage.setItem('initialData',JSON.stringify(newState.piData));\n  };\n  openAddDialog = () => {\n    this.setState({\n      ...this.state,\n      dialogOptions: {...this.state.dialogOptions, open: true, isAddmode: true, storyId: \"\",story: {\n        id: \"story_\" + +new Date(),\n        title: \"\",\n        description: \"\",\n        epic: \"\",\n        risks: [],\n        dependancies: []\n      } }\n    });\n  };\n  handleFormSubmit = (storyId,isAddmode,story) => {\n   // console.log(storyId,isAddmode,story);\n   story.show=true;\n    if(!isAddmode){\n      let newState ={\n        ...this.state,\n        piData:{\n          ...this.state.piData,\n          stories:{\n            ...this.state.piData.stories,\n            [storyId]:story\n          },\n          selectedEpics:uniq([...this.state.piData.selectedEpics,story.epic])\n        },\n        dialogOptions: { ...this.state.dialogOptions, open: false }\n      };\n      this.setState(newState);\n      localStorage.setItem('initialData',JSON.stringify(newState.piData));\n    }else{\n      const todocolumn ='column-1';\n      let newState = {\n        ...this.state,\n        piData:{\n          ...this.state.piData,\n          stories:{\n            ...this.state.piData.stories,\n            [story.id]:story\n          },\n          columns:{\n            ...this.state.piData.columns,\n            [todocolumn]:{\n              ...this.state.piData.columns[todocolumn],\n              storyIds:[story.id,...this.state.piData.columns[todocolumn].storyIds]\n            }\n          },\n          selectedEpics:uniq([...this.state.piData.selectedEpics,story.epic])\n        },\n        dialogOptions: { ...this.state.dialogOptions, open: false }\n      }\n      this.setState(newState);\n      localStorage.setItem('initialData',JSON.stringify(newState.piData));\n\n    }\n    \n  };\n  onEditStory = storyId => {\n    //console.log(storyId);\n    const story = this.state.piData.stories[storyId];\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        open: true,\n        storyId: storyId,\n        story: story,\n        isAddmode:false\n      }\n    });\n  };\n  onDeleteStory = storyId =>{\n    //console.log(storyId);\n    const stories = this.state.piData.stories;\n    const columns =this.state.piData.columns\n    delete this.state.piData.stories[storyId];\n    const columnKeys = Object.keys(this.state.piData.columns);\n    columnKeys.forEach((item=>{\n      let newStoriesArray = columns[item].storyIds.filter((item)=>item!=storyId);\n      columns[item].storyIds=newStoriesArray;\n    }));\n    let newState = {\n      ...this.state,\n      piData:{\n        ...this.state.piData,\n        stories:{...stories},\n        columns:{...columns}\n      }\n    }\n    this.setState(newState);\n    localStorage.setItem('initialData',JSON.stringify(newState.piData));\n  }\n  onCheckEpicFilter = (e, epic)=>{\n    //console.log(e, epic);\n\n    let selectedEpicsList = this.state.piData.selectedEpics;\n    if(e.target.checked){\n      selectedEpicsList.push(epic);\n    }else{\n      selectedEpicsList =selectedEpicsList.filter(item=>item!=epic)\n    }\n  const stories = this.state.piData.stories;\n  const storyIds = Object.keys(stories)\n  storyIds.forEach(storyId=>{\n    if(selectedEpicsList.find(epicItm=>epicItm==stories[storyId].epic)){\n      stories[storyId].show =true;\n    }else{\n      stories[storyId].show =false;\n    }\n  })\n  let newState = {...this.state,\n    piData:{\n      ...this.state.piData,\n      stories:{\n        ...stories\n      },\n      selectedEpics:uniq(selectedEpicsList)\n    }\n   \n  }\n    this.setState(newState);\n    localStorage.setItem('initialData',JSON.stringify(newState.piData));\n  }\n\n  /*form callbacks*/\n   handleTitleChange = (res, p) => {\n    //setStory({ ...story, title: res.target.value });\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          title:res.target.value\n        }\n      }\n    });\n\n  };\n   handleDescChange = (res, p) => {\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          description:res.target.value\n        }\n      }\n    });\n  };\n   handleEpicChange = (res, p) => {\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          epic:res.target.value\n        }\n      }\n    });\n  };\n   addMoreRisks = ()=>{\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          risks:[...this.state.dialogOptions.story.risks,'']\n        }\n      }\n    });\n  \n\n  }\n   handleRiskChange = (e,index)=>{\n    const risks = this.state.dialogOptions.story.risks;\n    risks[index]= e.target.value;\n   // setStory({ ...story,risks:[...risks]  });\n   this.setState({\n    ...this.state,\n    dialogOptions: {\n      ...this.state.dialogOptions,\n      story:{\n        ...this.state.dialogOptions.story,\n        risks:[...this.state.dialogOptions.story.risks]\n      }\n    }\n  });\n  }\n   handleDependancyChange =(e,index)=>{\n    const dependancies = this.state.dialogOptions.story.dependancies;\n    dependancies[index]= e.target.value;\n  \n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          dependancies:[...this.state.dialogOptions.story.dependancies]\n        }\n      }\n    });\n  }\n   removeRisk = (index)=>{\n      const risks = this.state.dialogOptions.story.risks;\n      risks.splice(index,1);\n     // setStory({ ...story,risks:[...risks]  });\n     this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          risks:[...this.state.dialogOptions.story.risks]\n        }\n      }\n    });\n  }\n   addMoreDeps = ()=>{\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          dependancies:[...this.state.dialogOptions.story.dependancies,'']\n        }\n      }\n    });\n   \n\n    \n  }\n   removeDependancy =(index)=>{\n    const dependancies = this.state.dialogOptions.story.dependancies;\n    dependancies.splice(index,1);\n    ///setStory({ ...story,dependancies:[...dependancies]  });\n    this.setState({\n      ...this.state,\n      dialogOptions: {\n        ...this.state.dialogOptions,\n        story:{\n          ...this.state.dialogOptions.story,\n          dependancies:[...this.state.dialogOptions.story.dependancies]\n        }\n      }\n    });\n}\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();"],"sourceRoot":""}